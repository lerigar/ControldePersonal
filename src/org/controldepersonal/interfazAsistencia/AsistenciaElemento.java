/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.controldepersonal.interfazAsistencia;

import java.util.Calendar;
import javax.swing.JOptionPane;
import org.controldepersonal.conector.conector;

/**
 *
 * @author Miguel
 */
public class AsistenciaElemento extends javax.swing.JDialog {

    /**
     * Creates new form AsistenciaElemento
     */
    conector conexionactual;
    public AsistenciaElemento(java.awt.Frame parent, boolean modal,conector conexionactual,String nombreServicio,String nombreElemento){
        super(parent, modal);
        this.conexionactual = conexionactual;
        initComponents();
        setTitle("Asistencia diaria");
        inicializaVentana(nombreServicio,nombreElemento);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAsistenciaElemento = new javax.swing.JLabel();
        txtAsistenciaElemento = new javax.swing.JTextField();
        lblAsistenciaDia = new javax.swing.JLabel();
        txtAsistenciaDia = new javax.swing.JTextField();
        lblAsistenciaServicio = new javax.swing.JLabel();
        txtAsistenciaServicio = new javax.swing.JTextField();
        lblAsistenciaEntrada = new javax.swing.JLabel();
        txtAsistenciaEntrada = new javax.swing.JTextField();
        btnAsistenciaEntrada = new javax.swing.JButton();
        lblAsistenciaDiaSalida = new javax.swing.JLabel();
        txtAsistenciaDiaSalida = new javax.swing.JTextField();
        lblAsistenciaSalida = new javax.swing.JLabel();
        txtAsistenciaSalida = new javax.swing.JTextField();
        btnAsistenciaSalida = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblAsistenciaElemento.setText("Elemento:");

        txtAsistenciaElemento.setEnabled(false);

        lblAsistenciaDia.setText("Día:");

        txtAsistenciaDia.setEnabled(false);

        lblAsistenciaServicio.setText("Servicio:");

        txtAsistenciaServicio.setEnabled(false);

        lblAsistenciaEntrada.setText("Hora entrada:");

        txtAsistenciaEntrada.setEnabled(false);

        btnAsistenciaEntrada.setText("Registrar entrada");
        btnAsistenciaEntrada.setEnabled(false);
        btnAsistenciaEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsistenciaEntradaActionPerformed(evt);
            }
        });

        lblAsistenciaDiaSalida.setText("Día:");

        txtAsistenciaDiaSalida.setEnabled(false);

        lblAsistenciaSalida.setText("Hora salida:");

        txtAsistenciaSalida.setEnabled(false);

        btnAsistenciaSalida.setText("Registrar salida");
        btnAsistenciaSalida.setEnabled(false);
        btnAsistenciaSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsistenciaSalidaActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblAsistenciaElemento)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtAsistenciaElemento, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblAsistenciaServicio)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtAsistenciaServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lblAsistenciaDia)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtAsistenciaDia, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblAsistenciaEntrada)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtAsistenciaEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblAsistenciaSalida)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtAsistenciaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnAsistenciaSalida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAsistenciaEntrada, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblAsistenciaDiaSalida)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAsistenciaDiaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalir)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAsistenciaElemento)
                    .addComponent(txtAsistenciaElemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAsistenciaDia)
                    .addComponent(txtAsistenciaDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAsistenciaServicio)
                    .addComponent(txtAsistenciaServicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAsistenciaEntrada)
                    .addComponent(txtAsistenciaEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAsistenciaEntrada))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAsistenciaDiaSalida)
                    .addComponent(txtAsistenciaDiaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAsistenciaSalida)
                    .addComponent(txtAsistenciaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAsistenciaSalida))
                .addGap(18, 18, 18)
                .addComponent(btnSalir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAsistenciaEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsistenciaEntradaActionPerformed
        if(txtAsistenciaEntrada.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Ingresa una hora válida");
        }
        else{
            String[] hora = txtAsistenciaEntrada.getText().split("\\:");
            if(revisaHora(hora[0])){
                if(revisaMinutos(hora[1])){
                    if(revisaSegundos(hora[2])){
                        txtAsistenciaEntrada.setEnabled(false);
                        btnAsistenciaEntrada.setEnabled(false);
                        //Guardar en la base de datos hora y dia
                        txtAsistenciaSalida.setEnabled(true);
                        btnAsistenciaSalida.setEnabled(true);
                    }
                    else{
                        JOptionPane.showMessageDialog(rootPane, "Ingresa una hora correcta");
                    }
                }
                else{
                    JOptionPane.showMessageDialog(rootPane, "Ingresa una hora correcta");
                }
            }
            else{
                JOptionPane.showMessageDialog(rootPane, "Ingresa una hora correcta");
            }
        }        
    }//GEN-LAST:event_btnAsistenciaEntradaActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnAsistenciaSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsistenciaSalidaActionPerformed
        if(txtAsistenciaSalida.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Ingresa una hora válida");
        }
        else{
            String[] hora = txtAsistenciaSalida.getText().split("\\:");
            if(revisaHora(hora[0])){
                if(revisaMinutos(hora[1])){
                    if(revisaSegundos(hora[2])){
                        Calendar calendario = Calendar.getInstance();
                        txtAsistenciaDiaSalida.setText(Integer.toString(calendario.get(Calendar.DATE))+"/"+Integer.toString(calendario.get(Calendar.MONTH)+1)+"/"+Integer.toString(calendario.get(Calendar.YEAR)));
                        txtAsistenciaSalida.setEnabled(false);
                        btnAsistenciaSalida.setEnabled(false);
                    }
                    else{
                        JOptionPane.showMessageDialog(rootPane, "Ingresa una hora correcta");
                    }
                }
                else{
                    JOptionPane.showMessageDialog(rootPane, "Ingresa una hora correcta");
                }
            }
            else{
                JOptionPane.showMessageDialog(rootPane, "Ingresa una hora correcta");
            }            
        }        
    }//GEN-LAST:event_btnAsistenciaSalidaActionPerformed
    
    private void inicializaVentana(String nombreServicio,String nombreElemento){        
        txtAsistenciaElemento.setText(nombreElemento);
        txtAsistenciaServicio.setText(nombreServicio);
        //Busca hora en la base de datos y asignada a txthoraEntreda y dia         
        if(txtAsistenciaEntrada.getText().equals("")){
            Calendar calendario = Calendar.getInstance();
            txtAsistenciaDia.setText(Integer.toString(calendario.get(Calendar.DATE))+"/"+Integer.toString(calendario.get(Calendar.MONTH)+1)+"/"+Integer.toString(calendario.get(Calendar.YEAR)));
            txtAsistenciaEntrada.setEnabled(true);
            btnAsistenciaEntrada.setEnabled(true);
        }
        else{
            txtAsistenciaSalida.setEnabled(true);
            btnAsistenciaSalida.setEnabled(true);
        }
        //busca en la base de datos si hay hora de entrada registrada
    }
    
    private boolean revisaHora(String hora){
        if(Integer.parseInt(hora)>=0 && Integer.parseInt(hora)<=23){
            return true;
        }
        else{
            return false;
        }
    }
    
    private boolean revisaMinutos(String minutos){
        if(Integer.parseInt(minutos)>=0 && Integer.parseInt(minutos)<=59){
            return true;
        }
        else{
            return false;
        }
    }
    
    private boolean revisaSegundos(String segundos){
        if(Integer.parseInt(segundos)>=0 && Integer.parseInt(segundos)<=59){
            return true;
        }
        else{
            return false;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAsistenciaEntrada;
    private javax.swing.JButton btnAsistenciaSalida;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel lblAsistenciaDia;
    private javax.swing.JLabel lblAsistenciaDiaSalida;
    private javax.swing.JLabel lblAsistenciaElemento;
    private javax.swing.JLabel lblAsistenciaEntrada;
    private javax.swing.JLabel lblAsistenciaSalida;
    private javax.swing.JLabel lblAsistenciaServicio;
    private javax.swing.JTextField txtAsistenciaDia;
    private javax.swing.JTextField txtAsistenciaDiaSalida;
    private javax.swing.JTextField txtAsistenciaElemento;
    private javax.swing.JTextField txtAsistenciaEntrada;
    private javax.swing.JTextField txtAsistenciaSalida;
    private javax.swing.JTextField txtAsistenciaServicio;
    // End of variables declaration//GEN-END:variables
}
